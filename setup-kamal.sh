#!/bin/bash

# ========================================
# Интерактивная настройка Kamal для AdBid
# ========================================

set -e

# Цвета
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}╔════════════════════════════════════════╗${NC}"
echo -e "${CYAN}║   Настройка Kamal для AdBid            ║${NC}"
echo -e "${CYAN}╚════════════════════════════════════════╝${NC}"
echo ""

# Функция для чтения ввода
prompt_input() {
    local prompt="$1"
    local var_name="$2"
    local default="$3"
    
    if [ -n "$default" ]; then
        read -p "$prompt [$default]: " input
        eval "$var_name=\${input:-$default}"
    else
        read -p "$prompt: " input
        eval "$var_name=\$input"
    fi
}

# Функция для чтения пароля
prompt_password() {
    local prompt="$1"
    local var_name="$2"
    
    echo -n "$prompt: "
    read -s input
    echo ""
    eval "$var_name=\$input"
}

echo -e "${YELLOW}📋 Шаг 1: Docker Hub настройка${NC}"
echo "Вам понадобится:"
echo "1. Docker Hub username"
echo "2. Docker Hub Access Token (рекомендуется) или пароль"
echo ""
echo "Создать Access Token: https://hub.docker.com/settings/security"
echo ""

prompt_input "Docker Hub username" DOCKER_USERNAME ""

if [ -z "$DOCKER_USERNAME" ]; then
    echo -e "${RED}❌ Docker Hub username обязателен${NC}"
    exit 1
fi

prompt_password "Docker Hub password/token" DOCKER_PASSWORD

if [ -z "$DOCKER_PASSWORD" ]; then
    echo -e "${RED}❌ Docker Hub password/token обязателен${NC}"
    exit 1
fi

echo ""
echo -e "${YELLOW}📋 Шаг 2: Настройка сервера${NC}"

SERVER_IP="165.227.11.220"
DOMAIN="adbid.me"
EMAIL="admin@adbid.me"

prompt_input "IP адрес сервера" SERVER_IP "$SERVER_IP"
prompt_input "Домен" DOMAIN "$DOMAIN"
prompt_input "Email для SSL сертификата" EMAIL "$EMAIL"

echo ""
echo -e "${YELLOW}📋 Шаг 3: Проверка SSH доступа${NC}"

echo -n "Проверяю SSH доступ к $SERVER_IP... "
if ssh -o ConnectTimeout=5 -o BatchMode=yes root@$SERVER_IP "echo 'OK'" &>/dev/null; then
    echo -e "${GREEN}✅ SSH доступ работает${NC}"
else
    echo -e "${RED}❌ SSH доступ не работает${NC}"
    echo ""
    echo "Попробуйте выполнить:"
    echo "  ssh-copy-id root@$SERVER_IP"
    echo ""
    read -p "Продолжить все равно? (y/n): " continue_anyway
    if [ "$continue_anyway" != "y" ]; then
        exit 1
    fi
fi

echo ""
echo -e "${YELLOW}📋 Шаг 4: Обновление конфигурации${NC}"

# Обновляем .env
cat > .env << EOF
# Kamal deployment environment variables
# Generated by setup-kamal.sh on $(date)

# Docker Registry credentials
KAMAL_REGISTRY_USERNAME=$DOCKER_USERNAME
KAMAL_REGISTRY_PASSWORD=$DOCKER_PASSWORD

# Server configuration
SERVER_IP=$SERVER_IP
DOMAIN=$DOMAIN

# Let's Encrypt email for SSL certificates
LETSENCRYPT_EMAIL=$EMAIL

# Optional: Database credentials (if using)
# DATABASE_URL=postgres://user:password@host:5432/dbname

# Optional: API keys
# API_KEY=your_api_key_here
EOF

echo -e "${GREEN}✅ .env файл обновлен${NC}"

# Обновляем config/deploy.yml
sed -i.bak "s|image: .*|image: $DOCKER_USERNAME/adbid|g" config/deploy.yml
sed -i.bak "s|165.227.11.220|$SERVER_IP|g" config/deploy.yml
sed -i.bak "s|Host(\`adbid.me\`, \`www.adbid.me\`)|Host(\`$DOMAIN\`, \`www.$DOMAIN\`)|g" config/deploy.yml
sed -i.bak "s|admin@adbid.me|$EMAIL|g" config/deploy.yml

echo -e "${GREEN}✅ config/deploy.yml обновлен${NC}"

echo ""
echo -e "${YELLOW}📋 Шаг 5: Проверка Docker${NC}"

echo -n "Проверяю Docker login... "
if echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin &>/dev/null; then
    echo -e "${GREEN}✅ Docker login успешен${NC}"
else
    echo -e "${RED}❌ Docker login не удался${NC}"
    echo "Проверьте username и password/token"
    exit 1
fi

echo ""
echo -e "${GREEN}╔════════════════════════════════════════╗${NC}"
echo -e "${GREEN}║   ✅ Настройка завершена успешно!      ║${NC}"
echo -e "${GREEN}╚════════════════════════════════════════╝${NC}"
echo ""
echo -e "${CYAN}Что дальше:${NC}"
echo ""
echo "1. Установите Kamal (если еще не установлен):"
echo -e "   ${YELLOW}brew install kamal${NC}"
echo "   или"
echo -e "   ${YELLOW}gem install kamal${NC}"
echo ""
echo "2. Инициализируйте Kamal:"
echo -e "   ${YELLOW}./kamal-deploy.sh init${NC}"
echo ""
echo "3. Настройте сервер (только первый раз):"
echo -e "   ${YELLOW}./kamal-deploy.sh setup${NC}"
echo ""
echo "4. Выполните деплой:"
echo -e "   ${YELLOW}./kamal-deploy.sh deploy${NC}"
echo ""
echo -e "${CYAN}Конфигурация:${NC}"
echo "  Docker Hub: $DOCKER_USERNAME/adbid"
echo "  Server: $SERVER_IP"
echo "  Domain: $DOMAIN"
echo "  SSL Email: $EMAIL"
echo ""

# Создаем краткую шпаргалку
cat > KAMAL_CHEATSHEET.txt << EOF
=== KAMAL QUICK COMMANDS ===

Installation:
  brew install kamal
  OR
  gem install kamal

First time setup:
  ./kamal-deploy.sh init
  ./kamal-deploy.sh setup
  ./kamal-deploy.sh deploy

Daily usage:
  ./kamal-deploy.sh deploy    # Full deploy
  ./kamal-deploy.sh quick     # Quick redeploy
  ./kamal-deploy.sh rollback  # Rollback
  ./kamal-deploy.sh logs      # View logs
  ./kamal-deploy.sh status    # Check status

Configuration:
  Docker Hub: $DOCKER_USERNAME/adbid
  Server: $SERVER_IP
  Domain: https://$DOMAIN
EOF

echo -e "${GREEN}📝 Создана шпаргалка: KAMAL_CHEATSHEET.txt${NC}"